@using AllYourPlates.WebMVC.DataAccess
@inject IConfiguration Configuration
@using System.Runtime.InteropServices
@using System.Text.Json

@{
    //TODO create a logo
    ViewData["Title"] = "Home Page";
}

<div class="text-center">
    <h1 class="display-4">Welcome</h1>
    <p>Learn about <a href="https://learn.microsoft.com/aspnet/core">building Web apps with ASP.NET Core</a>.</p>

    <!-- Container for the list of messages -->
    <ul id="messageList"></ul> <!-- List to hold messages -->
</div>

@section Scripts {
    <script type="text/javascript">

        //TODO: Add version checking to show a message when the version is out of date

        // async function checkForUpdates() {
        //     const currentVersion = document.getElementById("currentVersion").innerText.trim();
        //     const githubApiUrl = "https://api.github.com/repos/pavelgutin/allyourplates/releases/latest";
        //     try {
        //         const response = await fetch(githubApiUrl, {
        //             headers: { "Accept": "application/vnd.github.v3+json" }
        //         });
        //         const data = await response.json();
        //         const latestVersion = data.tag_name;

        //         if (latestVersion && latestVersion !== currentVersion) {
        //             document.getElementById("latestVersion").innerText = latestVersion;
        //             document.getElementById("update-notice").style.display = "block";
        //         }
        //     } catch (error) {
        //         console.error("Error checking for updates:", error);
        //     }
        // }

        // checkForUpdates();


        const connection = new signalR.HubConnectionBuilder()
            .withUrl("/notificationHub") // URL to your SignalR hub
            .build();

        connection.on("ReceiveMessage", function (message) {
            const li = document.createElement("li");
            li.textContent = message;
            const messageList = document.getElementById("messageList");
            messageList.appendChild(li);
        });

        connection.start().catch(function (err) {
            console.error("Error while starting connection: " + err);
        });
    </script>
}